import { JsonSchemaCommand } from ".";

/** Collection of fixes for the json schema dictionary generated by parsing redis-doc's command.json */
export const fixupSchema = (schema: Record<string, JsonSchemaCommand>) => {
    const clone: typeof schema = JSON.parse(JSON.stringify(schema));

    fixSetEnum(clone);

    return clone;
};

export const fixupExample = (example: string) => {
    const array = [example] // use array as a stupid monad-like data structure
        .map(fixGeoradiusExample)
        .map(s => s);

    return array[0];
};

/** https://github.com/redis/redis-doc/pull/1232 */
function fixSetEnum(schema: Record<string, JsonSchemaCommand>) {
    const badSetArg = schema.SET.arguments.find(
        a => a.name === "expiration" && a.schema.enum?.join(",") === "EX seconds,PX milliseconds"
    )!;
    badSetArg.schema = {
        type: "array",
        items: [{ type: "string", enum: ["EX", "PX"] }, { type: "number" }],
    };
}

function fixGeoradiusExample(example: string) {
    const withArgsFlipped = "GEORADIUS Sicily 15 37 200 km WITHDIST WITHCOORD";
    return example === withArgsFlipped ? example.replace("WITHDIST WITHCOORD", "WITHCOORD WITHDIST") : example;
}
